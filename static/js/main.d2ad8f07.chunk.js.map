{"version":3,"sources":["index.js"],"names":["Number","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onClick","value","Operator","clickedClass","clicked","Display","output","result","number2","number","operator","Calculator","_this","Object","_home_robbie_Documents_react_reactCalculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_robbie_Documents_react_reactCalculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_robbie_Documents_react_reactCalculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","selectedNumber","selectedNumber2","selectedOperator","setState","i","clearState","operation","handleCalculation","window","alert","number1","parseInt","_this2","handleClickNumber","clickedInput","_this3","handleClickOperator","renderDisplay","renderNumber","renderOperator","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mOAIA,SAASA,EAAOC,GACZ,OACIC,EAAAC,EAAAC,cAAA,UACIC,UAAU,eACVC,QAASL,EAAMK,SACdL,EAAMM,OAKnB,SAASC,EAASP,GACd,IAAIQ,EAEJ,OADAA,EAAeR,EAAMS,QAAU,wBAA0B,2BAErDR,EAAAC,EAAAC,cAAA,UACIC,UAAWI,EACXH,QAASL,EAAMK,SACdL,EAAMM,OAKnB,SAASI,EAAQV,GACb,IAAIW,EAaJ,OAXIA,EADAX,EAAMY,OACGZ,EAAMY,OACRZ,EAAMa,QACJb,EAAMc,OAASd,EAAMe,SAAWf,EAAMa,QAE1Cb,EAAMe,SACFf,EAAMc,OAASd,EAAMe,SACvBf,EAAMc,OACJd,EAAMc,OAEN,EAGTb,EAAAC,EAAAC,cAAA,UAAKQ,OAIPK,cAEF,SAAAA,EAAYhB,GAAO,IAAAiB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMpB,KACDwB,MAAQ,CACTC,eAAgB,KAChBC,gBAAiB,KACjBC,iBAAkB,KAClBf,OAAQ,MANGK,4EAWfG,KAAKQ,SAAS,CAACH,eAAgB,KAC3BC,gBAAiB,KACjBC,iBAAkB,KAClBf,OAAQ,iDAGEiB,GACVT,KAAKI,MAAMZ,QACXQ,KAAKU,aACLV,KAAKQ,SAAS,CAACH,eAAgBI,KACxBT,KAAKI,MAAMG,iBACdP,KAAKI,MAAME,gBACXN,KAAKQ,SAAS,CAACF,gBAAiB,GAAKN,KAAKI,MAAME,gBAAkBG,IAElET,KAAKQ,SAAS,CAACF,gBAAiBG,IAE5BT,KAAKI,MAAMC,eAGnBL,KAAKQ,SAAS,CAACH,eAAgB,GAAKL,KAAKI,MAAMC,eAAiBI,IAFhET,KAAKQ,SAAS,CAACH,eAAgBI,gDAMnBE,GACE,MAAdA,EACIX,KAAKI,MAAMG,kBAAoBP,KAAKI,MAAME,gBAC1CN,KAAKQ,SAAS,CAAChB,OAAQQ,KAAKY,kBAAkBZ,KAAKI,MAAMC,eAAgBL,KAAKI,MAAMG,iBAAkBP,KAAKI,MAAME,mBAEjHO,OAAOC,MAAM,+DAEXd,KAAKI,MAAMZ,OACjBQ,KAAKQ,SAAS,CAACH,eAAgBL,KAAKI,MAAMZ,OACtCe,iBAAkBI,EAClBL,gBAAiB,KACjBd,OAAQ,OACNQ,KAAKI,MAAMC,eACjBL,KAAKQ,SAAS,CAACD,iBAAkBI,IAEjCE,OAAOC,MAAM,iFAIHC,EAASpB,EAAUF,GACjC,OAAQE,GACJ,IAAK,IACD,OAAQqB,SAASD,GAAWC,SAASvB,GACzC,IAAK,IACD,OAAQuB,SAASD,GAAWC,SAASvB,GACzC,IAAK,IACD,OAAQuB,SAASD,GAAWC,SAASvB,GACzC,IAAK,IACD,OAAQuB,SAASD,GAAWC,SAASvB,GACzC,QACI,OAAQoB,OAAOC,MAAM,qFAIpBL,GAAG,IAAAQ,EAAAjB,KACZ,OAAOnB,EAAAC,EAAAC,cAACJ,EAAD,CACHO,MAASuB,EACTxB,QAAW,kBAAMgC,EAAKC,kBAAkBT,6CAIjCE,EAAWQ,GAAc,IAAAC,EAAApB,KACpC,OAAOnB,EAAAC,EAAAC,cAACI,EAAD,CACHD,MAASyB,EACTtB,QAAW8B,EACXlC,QAAW,kBAAMmC,EAAKC,oBAAoBV,4CAIpCjB,EAAQD,EAASE,EAAUH,GACrC,OAAOX,EAAAC,EAAAC,cAACO,EAAD,CACHI,OAAUA,EACVD,QAAWA,EACXE,SAAYA,EACZH,OAAUA,qCAKd,OACIX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVgB,KAAKsB,cAActB,KAAKI,MAAMC,eAAgBL,KAAKI,MAAME,gBAAiBN,KAAKI,MAAMG,iBAAkBP,KAAKI,MAAMZ,SAEvHX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVgB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,IAEvB1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVgB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,IAEvB1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVgB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,IAEvB1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVgB,KAAKuB,aAAa,KAG3B1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVgB,KAAKwB,eAAe,KAAK,GACzBxB,KAAKwB,eAAe,KAAK,GACzBxB,KAAKwB,eAAe,KAAK,GACzBxB,KAAKwB,eAAe,KAAK,GACzBxB,KAAKwB,eAAe,KAAK,YA7HrBC,IAAMC,WAoI/BC,IAASC,OACL/C,EAAAC,EAAAC,cAACa,EAAD,MACAiC,SAASC,eAAe","file":"static/js/main.d2ad8f07.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Number(props) {\n    return (\n        <button\n            className=\"numberButton\"\n            onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\nfunction Operator(props) {\n    let clickedClass;\n    clickedClass = props.clicked ? \"operatorButtonClicked\" : \"operatorButtonNotClicked\";\n    return (\n        <button\n            className={clickedClass}\n            onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\nfunction Display(props) {\n    let output;\n    if (props.result) {\n        output = props.result\n    } else if (props.number2){\n        output = props.number + props.operator + props.number2\n    }\n    else if (props.operator) {\n        output = props.number + props.operator\n    } else if (props.number) {\n        output = props.number\n    } else {\n        output = 0\n    }\n    return (\n        <h3>{output}</h3>\n    )\n}\n\nclass Calculator extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedNumber: null,\n            selectedNumber2: null,\n            selectedOperator: null,\n            result: null\n        }\n    }\n\n    clearState(){\n        this.setState({selectedNumber: null,\n            selectedNumber2: null,\n            selectedOperator: null,\n            result: null})\n    }\n\n    handleClickNumber(i){\n        if (this.state.result){\n            this.clearState();\n            this.setState({selectedNumber: i})\n        } else if (this.state.selectedOperator){\n            if (this.state.selectedNumber2){\n                this.setState({selectedNumber2: \"\" + this.state.selectedNumber2 + i})\n            } else {\n                this.setState({selectedNumber2: i})\n            }\n        } else if (!this.state.selectedNumber){\n            this.setState({selectedNumber: i})\n        } else {\n            this.setState({selectedNumber: \"\" + this.state.selectedNumber + i})\n        }\n    }\n\n    handleClickOperator(operation){\n        if (operation === \"=\"){\n            if (this.state.selectedOperator && this.state.selectedNumber2){\n                this.setState({result: this.handleCalculation(this.state.selectedNumber, this.state.selectedOperator, this.state.selectedNumber2)});\n            } else {\n                window.alert(\"Please select two numbers and an operator before pressing =\")\n            }\n        } else if(this.state.result){\n            this.setState({selectedNumber: this.state.result,\n                selectedOperator: operation,\n                selectedNumber2: null,\n                result: null})\n        } else if(this.state.selectedNumber){\n            this.setState({selectedOperator: operation})\n        } else {\n            window.alert(\"Select a number before an operation\")\n        }\n    }\n\n    handleCalculation(number1, operator, number2){\n        switch (operator) {\n            case \"X\":\n                return (parseInt(number1) * parseInt(number2));\n            case \"%\":\n                return (parseInt(number1) / parseInt(number2));\n            case \"+\":\n                return (parseInt(number1) + parseInt(number2));\n            case \"-\":\n                return (parseInt(number1) - parseInt(number2));\n            default:\n                return (window.alert(\"An unexpected error has occurred, try again\"))\n        }\n    }\n\n    renderNumber(i) {\n        return <Number\n            value = {i}\n            onClick = {() => this.handleClickNumber(i)}\n        />\n    }\n\n    renderOperator(operation, clickedInput) {\n        return <Operator\n            value = {operation}\n            clicked = {clickedInput}\n            onClick = {() => this.handleClickOperator(operation)}\n        />\n    }\n\n    renderDisplay(number, number2, operator, result){\n        return <Display\n            number = {number}\n            number2 = {number2}\n            operator = {operator}\n            result = {result}\n        />\n    }\n\n    render () {\n        return (\n            <div>\n                <div className=\"display\">\n                    {this.renderDisplay(this.state.selectedNumber, this.state.selectedNumber2, this.state.selectedOperator, this.state.result)}\n                </div>\n                <div className=\"numbersBlock\">\n                    <div className=\"numberRow\">\n                        {this.renderNumber(1)}\n                        {this.renderNumber(2)}\n                        {this.renderNumber(3)}\n                    </div>\n                    <div className=\"numberRow\">\n                        {this.renderNumber(4)}\n                        {this.renderNumber(5)}\n                        {this.renderNumber(6)}\n                    </div>\n                    <div className=\"numberRow\">\n                        {this.renderNumber(7)}\n                        {this.renderNumber(8)}\n                        {this.renderNumber(9)}\n                    </div>\n                    <div className=\"zeroButton\">\n                        {this.renderNumber(0)}\n                    </div>\n                </div>\n                <div className=\"operatorsColumn\">\n                    {this.renderOperator(\"X\", false)}\n                    {this.renderOperator(\"%\", false)}\n                    {this.renderOperator(\"+\", false)}\n                    {this.renderOperator(\"-\", false)}\n                    {this.renderOperator(\"=\", false)}\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Calculator />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}